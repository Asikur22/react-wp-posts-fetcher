{"version":3,"sources":["Components/Header.js","Components/SinglePost.js","Components/Posts.js","Components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","style","backgroundColor","Component","SinglePost","postLoop","props","posts","map","post","index","className","href","link","target","rel","title","rendered","React","Posts","length","domain","label","Components_SinglePost","options","Form","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","state","showPosts","onSubmit","event","preventDefault","isUrl","substr","postsURL","alert","onChange","_event$target","name","setState","defineProperty","handleChange","n","i","push","htmlFor","Creatable_default","id","autoFocus","isSearchable","marginLeft","type","App","fetchPosts","url","fetch","then","response","contentType","headers","get","indexOf","json","text","urls","Components_Header","Form_Form","Components_Posts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df5fc964.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ backgroundColor: '#f4f4f4' }}>\n\t\t\t\t<h1>WP Posts Feacher</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React from 'react';\n\nclass SinglePost extends React.Component {\n\trender() {\n\t\tlet posts = this.props.posts;\n\n\t\tlet postLoop = posts.map((post, index) => {\n\t\t\treturn (\n\t\t\t\t<article key={index} className=\"xiong-block\">\n\t\t\t\t\t<a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t<h3>{post.title.rendered}</h3>\n\t\t\t\t\t</a>\n\t\t\t\t</article>\n\t\t\t);\n\t\t});\n\n\t\treturn <div>{postLoop}</div>;\n\t}\n}\n\nexport default SinglePost;\n","import React, { Component } from 'react';\nimport SinglePost from './SinglePost';\n\nexport class Posts extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.posts[0] ? (\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t{this.props.posts.length} Posts from {this.props.domain.label}\n\t\t\t\t\t</h1>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t<SinglePost posts={this.props.posts} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport Creatable from 'react-select/lib/Creatable';\nimport isUrl from 'is-url';\n\nconst options = [\n\t{ label: 'Localhost', value: 'http://localhost:3000/' },\n\t{ label: 'Asique', value: 'https://asique.net/' },\n\t{ label: 'Green Life IT', value: 'https://greenlifeit.com/' },\n\t{ label: 'Paira Studios', value: 'https://www.pairastudios.com/' }\n];\n\nexport class Form extends Component {\n\tstate = {\n\t\tdomain    : null,\n\t\tshowPosts : '5'\n\t};\n\n\tonSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tlet domain = this.state.domain;\n\t\tlet showPosts = this.state.showPosts;\n\t\tif (domain && isUrl(domain.value) && showPosts) {\n\t\t\tif (domain.value.substr(-1) !== '/') {\n\t\t\t\tdomain.value += '/';\n\t\t\t}\n\t\t\tthis.props.postsURL(domain, showPosts);\n\t\t} else {\n\t\t\talert('Please Add a Valid URL');\n\t\t}\n\t};\n\n\tonChange = (event) => {\n\t\tlet { name, value } = event.target;\n\t\tthis.setState({ [name]: value });\n\t};\n\n\thandleChange = (domain) => {\n\t\tthis.setState({ domain });\n\t};\n\n\trender() {\n\t\tlet n = [];\n\t\tfor (let i = 1; i <= 20; i++) {\n\t\t\tn.push(\n\t\t\t\t<option key={i} value={i}>\n\t\t\t\t\t{i}\n\t\t\t\t</option>\n\t\t\t);\n\t\t}\n\n\t\tconst { domain } = this.state;\n\n\t\treturn (\n\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<label htmlFor=\"domain\">Select Domain: </label>\n\t\t\t\t\t\t<Creatable\n\t\t\t\t\t\t\tname=\"domain\"\n\t\t\t\t\t\t\tid=\"domain\"\n\t\t\t\t\t\t\tvalue={domain}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tisSearchable={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>You can add custom WordPress site url. Like (http://yoursite.com/)</small>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<label style={{ marginLeft: '20px' }} htmlFor=\"showPosts\">\n\t\t\t\t\t\t\tShow Posts:{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tvalue={this.state.showPosts}\n\t\t\t\t\t\t\tname=\"showPosts\"\n\t\t\t\t\t\t\tid=\"showPosts\"\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{n}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-12 mt-3 mb-5\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary btn-block w-50 mx-auto\">\n\t\t\t\t\t\t\tGet Posts\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Posts from './Components/Posts';\nimport { Form } from './Components/Form';\nimport './bootstrap.min.css';\n\nclass App extends Component {\n\tstate = {\n\t\tposts  : [],\n\t\tdomain : null\n\t};\n\n\tfetchPosts = (url) => {\n\t\tfetch(url).then((response) => {\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (contentType && contentType.indexOf('application/json') !== -1) {\n\t\t\t\treturn response.json().then((response) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tposts : response\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn response.text().then((text) => {\n\t\t\t\t\talert('Could Not Find Any Post');\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tpostsURL = (urls, showPosts) => {\n\t\tlet url = urls.value;\n\t\tlet postsURL = `${url}wp-json/wp/v2/posts?per_page=${showPosts}`;\n\t\tthis.setState({ domain: urls });\n\n\t\t// Fetch Post from final URL.\n\t\tthis.fetchPosts(postsURL);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Form postsURL={this.postsURL} />\n\t\t\t\t\t<Posts posts={this.state.posts} domain={this.state.domain} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}